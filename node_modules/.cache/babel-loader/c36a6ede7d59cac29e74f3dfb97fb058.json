{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rama 7466\\\\Desktop\\\\paswordgenerate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { numbers, upperCaseLetters, lowerCaseLetters, specialCharacters } from './Character';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { COPY_Fail, COPY_SUCCESS } from './message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordLength, setPasswordLength] = useState(26);\n  const [includeUpperCase, setIncludeUpperCase] = useState(false);\n  const [includeLowerCase, setIncludeLowerCase] = useState(false);\n  const [includeNumbers, setIncludeNumbers] = useState(false);\n  const [includeSymbols, setIncludeSymbols] = useState(false);\n\n  const handleGeneratePassword = () => {\n    if (!includeUpperCase && !includeLowerCase && !includeNumbers && !includeSymbols) {\n      notify(\"To generate password you must select atleast one checkbox\", true);\n    } else {\n      let characterList = \"\";\n\n      if (includeNumbers) {\n        characterList = characterList + numbers;\n      }\n\n      if (includeUpperCase) {\n        characterList = characterList + upperCaseLetters;\n      }\n\n      if (includeLowerCase) {\n        characterList = characterList + lowerCaseLetters;\n      }\n\n      if (includeSymbols) {\n        characterList = characterList + specialCharacters;\n      }\n\n      setPassword(createPassword(characterList));\n      notify(\"Password is generated successfully\", false);\n    }\n  };\n\n  const createPassword = characterList => {\n    let password = \"\";\n    const characterListLength = characterList.length;\n\n    for (let i = 0; i < passwordLength; i++) {\n      const characterIndex = Math.round(Math.random() * characterListLength);\n      password = password + characterList.charAt(characterIndex);\n    }\n\n    return password;\n  };\n\n  const copyToClipboard = password => {\n    navigator.clipboard.writeText(password);\n  };\n\n  const notify = function (message) {\n    let hasError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (hasError) {\n      toast.error(message, {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      toast(message, {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  const handleCopyPassword = e => {\n    if (password === \"\") {\n      notify(COPY_Fail, true);\n    } else {\n      copyToClipboard(password);\n      notify(COPY_SUCCESS);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generator\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"generator__header\",\n          children: \"Password Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generator__password\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy__btn\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: handleCopyPassword,\n              className: \"far fa-clipboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password-strength\",\n            children: \"panjang pasword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"pw\",\n            defaultValue: passwordLength,\n            onChange: e => setPasswordLength(e.target.value),\n            type: \"number\",\n            id: \"password-stregth\",\n            name: \"password-strength\",\n            max: \"26\",\n            min: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"uppercase-letters\",\n            children: \"tambah HURUF BESAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: includeUpperCase,\n            onChange: e => setIncludeUpperCase(e.target.checked),\n            type: \"checkbox\",\n            id: \"uppercase-letters\",\n            name: \"uppercase-letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lowercase-letters\",\n            children: \"tambah huruf kecil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: includeLowerCase,\n            onChange: e => setIncludeLowerCase(e.target.checked),\n            type: \"checkbox\",\n            id: \"lowercase-letters\",\n            name: \"lowercase-letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"include-numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: includeNumbers,\n            onChange: e => setIncludeNumbers(e.target.checked),\n            type: \"checkbox\",\n            id: \"include-numbers\",\n            name: \"include-numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"include-symbols\",\n            children: \"Include Symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: includeSymbols,\n            onChange: e => setIncludeSymbols(e.target.checked),\n            type: \"checkbox\",\n            id: \"include-symbols\",\n            name: \"include-symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGeneratePassword,\n          className: \"generator__btn\",\n          children: \"Generate Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          newestOnTop: false,\n          closeOnClick: true,\n          rtl: false,\n          pauseOnFocusLoss: true,\n          draggable: true,\n          pauseOnHover: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7kcZNdFKdOJx8pHE4kYLJQz7NIo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Rama 7466/Desktop/paswordgenerate/src/App.js"],"names":["React","useState","numbers","upperCaseLetters","lowerCaseLetters","specialCharacters","toast","ToastContainer","COPY_Fail","COPY_SUCCESS","App","password","setPassword","passwordLength","setPasswordLength","includeUpperCase","setIncludeUpperCase","includeLowerCase","setIncludeLowerCase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","handleGeneratePassword","notify","characterList","createPassword","characterListLength","length","i","characterIndex","Math","round","random","charAt","copyToClipboard","navigator","clipboard","writeText","message","hasError","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleCopyPassword","e","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./App.css\"\r\nimport { numbers, upperCaseLetters, lowerCaseLetters, specialCharacters } from './Character'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { COPY_Fail, COPY_SUCCESS } from './message';\r\n\r\nconst App = () => {\r\n  const [password, setPassword] = useState(\"\")\r\n  const [passwordLength, setPasswordLength] = useState(26)\r\n  const [includeUpperCase, setIncludeUpperCase] = useState(false)\r\n  const [includeLowerCase, setIncludeLowerCase] = useState(false)\r\n  const [includeNumbers, setIncludeNumbers] = useState(false)\r\n  const [includeSymbols, setIncludeSymbols] = useState(false)\r\n  const handleGeneratePassword = () => {\r\n    if (!includeUpperCase && !includeLowerCase && !includeNumbers && !includeSymbols) {\r\n      notify(\"To generate password you must select atleast one checkbox\", true)\r\n    }\r\n    else {\r\n      let characterList = \"\"\r\n      if (includeNumbers) {\r\n        characterList = characterList + numbers\r\n      }\r\n      if (includeUpperCase) {\r\n        characterList = characterList + upperCaseLetters\r\n      }\r\n      if (includeLowerCase) {\r\n        characterList = characterList + lowerCaseLetters\r\n      }\r\n      if (includeSymbols) {\r\n        characterList = characterList + specialCharacters\r\n      }\r\n      setPassword(createPassword(characterList))\r\n      notify(\"Password is generated successfully\", false)\r\n    }\r\n\r\n\r\n  }\r\n  const createPassword = (characterList) => {\r\n    let password = \"\"\r\n    const characterListLength = characterList.length\r\n    for (let i = 0; i < passwordLength; i++) {\r\n      const characterIndex = Math.round(Math.random() * characterListLength)\r\n      password = password + characterList.charAt(characterIndex)\r\n    }\r\n    return password\r\n  }\r\n  const copyToClipboard = (password) => {\r\n\r\n    navigator.clipboard.writeText(password)\r\n  }\r\n  const notify = (message, hasError = false) => {\r\n    if (hasError) {\r\n      toast.error(message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    else {\r\n      toast(message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n\r\n  }\r\n  const handleCopyPassword = (e) => {\r\n    if (password === \"\") {\r\n      notify(COPY_Fail, true)\r\n    }\r\n    else {\r\n      copyToClipboard(password)\r\n      notify(COPY_SUCCESS)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"generator\">\r\n          <h2 className=\"generator__header\">\r\n           Password Generate\r\n          </h2>\r\n          <div className=\"generator__password\">\r\n            <h3 >{password}</h3>\r\n            <button className=\"copy__btn\">\r\n              <i onClick={handleCopyPassword} className=\"far fa-clipboard\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password-strength\">panjang pasword</label>\r\n            <input className=\"pw\" defaultValue={passwordLength} onChange={(e) => setPasswordLength(e.target.value)} type=\"number\" id=\"password-stregth\" name=\"password-strength\" max=\"26\" min=\"8\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"uppercase-letters\">tambah HURUF BESAR</label>\r\n            <input checked={includeUpperCase} onChange={(e) => setIncludeUpperCase(e.target.checked)} type=\"checkbox\" id=\"uppercase-letters\" name=\"uppercase-letters\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lowercase-letters\">tambah huruf kecil</label>\r\n            <input checked={includeLowerCase} onChange={(e) => setIncludeLowerCase(e.target.checked)} type=\"checkbox\" id=\"lowercase-letters\" name=\"lowercase-letters\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"include-numbers\"></label>\r\n            <input checked={includeNumbers} onChange={(e) => setIncludeNumbers(e.target.checked)} type=\"checkbox\" id=\"include-numbers\" name=\"include-numbers\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"include-symbols\">Include Symbols</label>\r\n            <input checked={includeSymbols} onChange={(e) => setIncludeSymbols(e.target.checked)} type=\"checkbox\" id=\"include-symbols\" name=\"include-symbols\" />\r\n          </div>\r\n          <button onClick={handleGeneratePassword} className=\"generator__btn\">\r\n            Generate Password\r\n          </button>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}